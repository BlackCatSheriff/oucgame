第一步：物品背包组用例分析
物品：
怪物被人杀，掉落物品。
游戏设定怪物如果能被怪物杀的话，掉落物品。
人PK时被杀，死的人掉落物品。
活人拣起掉落物品，死人不能拣。
活人把物品扔到地上。
活人使用物品。
活人死人都能查看物品。
活人制造物品。

背包：
设计时确定是否一直显示自己背包概况（比如说满不满，还有几个空位等）。
打开背包，活人和死人查看自己背包里的所有物品；
打开背包后，活人从自己背包里拿出物品使用。
活人把物品直接放入自己背包。
活人整理自己背包，包括移动背包里物品的存储位置，可叠加的物品重新分组叠加等。
一般的游戏里面，别人不能看自己的背包。如果设成能看，则上面的用例就得再修订。

第二步：需求分析
1、怪物被杀，掉落物品。
A、策划组或物品组要设计或者主持设计该游戏所有物品，包括物品名称物品用途物品属性值等；
B、策划组或物品组或怪物组要设定某类怪物身上的物品名称和物品数量。
C、策划组或怪物组或战斗组要设定某种怪物的掉落几率，比如说杀死后掉50%？或者说杀死后必掉1个？
D、策划组要设定同一种怪物的掉落几率是否不同？比如说是否设定同一种怪物新手村和野外掉落几率是不一样的？

2、活人把物品放入背包。
A、背包满了，两种情况：
A1、待放入的物品不可以叠加，则放入失败。
A2、待放入的物品可以叠加，且不超过最大叠加数量（比如说10个），则背包里的与待放入物品同一类的物品不满的加1，比如背包里有2组半面包，10--10--5，则再放个面包是10-10-6。
B、背包还有位置，待放入的物品背包里没有同类的，直接放入。
C、背包里与待放入的物品有同类的物品，分别是下列几种情况：
C1、待放入的物品不能叠加，直接放入。比如说原有1把斧头，再放入一把斧头，武器不能叠加，则放入，背包里是：斧头-----斧头。
C2、待放入的物品可以叠加，分两种情况：
C21、如果不超过最大叠加数量（比如说10个），则背包里的与待放入物品同一类的物品不满的加1，比如背包里有2组半面包，10--10--5，则再放个面包是10-10-6；
C22、如果都是最大叠加数量，则放入一个新位置。比如背包里有2组面包，比如说10-10，则再放1个是10-10-1。

第三步：需求设计，以2为例：
根据分析，背包的属性有：空背包放入物品的最大格数；背包的位置，比如说第1格，第2格等，背包里每一个位置放置的物品（没有则为空），用物品类别、物品ID和物品叠加数量表示；背包的主人是哪个玩家。
物品与背包的相关属性有：该类物品在背包中是否可以叠加，该物品的叠加的最大数量。
背包关心物品的属性有：物品的ID，物品的类别。

放入流程为：
查看背包的位置，两种情况：情况1：满了没有空位置了，情况2：还有空位置。
情况1-1：查看物品的类别是否属于可以叠加的，如果不能叠加则放入失败，该流程结束。
情况1-2-1：查看物品的类别是否属于可以叠加的，如果能叠加，则从第1个位置逐个查找，如果背包里没有该物品对应的类别，或者有对应的类别但每个位置均是叠加的最大数量，则放入失败，该流程结束；
情况1-2-2：查看物品的类别是否属于可以叠加的，如果能叠加，则从第1个位置逐个查找，如果背包里有该类物品，且某个位置没有达到叠加的最大数量，则放入成功，把物品ID放入位置里，并且该位置的物品叠加数量加1，放入成功，该流程结束。

情况2-1：查看物品的类别是否属于可以叠加的，如果不能叠加则放入第1个空位置，放入成功，该流程结束。
情况2-2-1：查看物品的类别是否属于可以叠加的，如果能叠加，则从第1个位置逐个查找，如果背包里没有该物品对应的类别，或者有对应的类别但每个位置均是叠加的最大数量，则放入第1个空位置，放入成功，该流程结束。
情况2-2-2：查看物品的类别是否属于可以叠加的，如果能叠加，则从第1个位置逐个查找，如果背包里有该类物品，且某个位置没有达到叠加的最大数量，则放入成功，把物品ID放入位置里，并且该位置的物品叠加数量加1，放入成功，该流程结束。

第四步：程序设计，以2为例：
